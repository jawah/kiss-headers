[build-system]
requires = ["hatchling>=1.6.0,<2"]
build-backend = "hatchling.build"

[project]
name = "kiss-headers"
description = "Object-oriented HTTP and IMAP (structured) headers."
readme = "README.md"
license-files = { paths = ["LICENSE"] }
license = "MIT"
keywords = ["headers", "http", "mail", "text", "imap", "header", "https", "imap4"]
authors = [
  {name = "Ahmed R. TAHRI", email="tahri.ahmed@proton.me"},
]
maintainers = [
  {name = "Ahmed R. TAHRI", email="tahri.ahmed@proton.me"},
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Development Status :: 5 - Production/Stable",
    "Topic :: Communications :: Email",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Content Management System",
    "Environment :: Web Environment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Utilities",
    "Programming Language :: Python :: Implementation :: PyPy",
]
requires-python = ">=3.7"
dynamic = ["version"]

[project.urls]
"Documentation" = "https://jawah.github.io/kiss-headers"
"Code" = "https://github.com/jawah/kiss-headers"
"Issue tracker" = "https://github.com/jawah/kiss-headers/issues"

[tool.hatch.version]
path = "src/kiss_headers/version.py"

[tool.hatch.build.targets.sdist]
include = [
    "/docs",
    "/src",
    "/tests",
    "/dev-requirements.txt",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = [
    "src/kiss_headers/",
]

[tool.pytest.ini_options]
addopts = "--doctest-modules -rxXs"
doctest_optionflags = "NORMALIZE_WHITESPACE ELLIPSIS"
minversion = "6.2"
testpaths = ["tests", "src/kiss_headers"]
filterwarnings = [
    "error",
]

[tool.mypy]
disallow_untyped_defs = true

[tool.ruff.lint]
ignore = ["E501", "E203", "E721"]
select = [
    "E",  # pycodestyle
    "F",  # Pyflakes
    "W",  # pycodestyle
    "I",  # isort
    "U",  # pyupgrade
]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
